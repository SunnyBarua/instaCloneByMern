{"version":3,"sources":["components/Navbar/Navbar.js","components/Profile/Profile.js","components/Signup/Signup.js","components/Sign In/Signin.js","components/UserProfile/Userprofile.js","reducers/userReducer.js","components/SubscribesUserPosts/SubscribesUserPosts.js","components/CreatePost/Createpost.js","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","useContext","UserConext","state","dispatch","history","useHistory","className","to","id","key","Math","random","onClick","localStorage","clear","type","push","Profile","useState","mypics","setPics","image","setImage","useEffect","fetch","headers","Authorization","getItem","then","res","json","result","mypost","data","FormData","append","method","body","console","log","JSON","stringify","pic","url","setItem","payload","window","location","reload","catch","err","src","onChange","e","file","target","files","name","email","length","followers","following","map","item","_id","photo","alt","title","Signup","setName","password","setPassword","setEmail","undefined","setUrl","uploadFileds","test","error","M","toast","html","classes","token","user","message","value","placeholder","uploadPic","Signin","Userprofile","profile","setProfile","userId","useParams","includes","showfollow","setShowfollow","posts","followId","prevState","unfollowId","newFollower","filter","reducer","action","SubscribesUserPosts","setData","postedBy","postid","newData","likes","postId","comments","cmnt","text","onSubmit","preventDefault","Createpost","setTitle","setBody","postDetails","Home","createContext","Routing","parse","exact","path","App","useReducer","Provider","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53c786f3.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UserConext } from \"../../App\";\r\n\r\nfunction Navbar() {\r\n  const { state, dispatch } = useContext(UserConext);\r\n  const history = useHistory();\r\n  const renderList = () => {\r\n    if (state) {\r\n      return [\r\n        <li key={Math.random()}>\r\n          <Link to=\"/profile\">Profile</Link>\r\n        </li>,\r\n        <li key={Math.random()}>\r\n          <Link to=\"/create\">Create Post</Link>\r\n        </li>,\r\n        <li key={Math.random()}>\r\n          <Link to=\"/myfollowingspost\">following Post</Link>\r\n        </li>,\r\n        <li key={Math.random()}>\r\n          <button\r\n            className=\"btn #c62828 red darken logout_button\"\r\n            onClick={() => {\r\n              localStorage.clear();\r\n              dispatch({ type: \"CLEAR\" });\r\n              history.push(\"/signin\");\r\n            }}\r\n          >\r\n            Logout\r\n          </button>\r\n        </li>,\r\n      ];\r\n    } else {\r\n      return [\r\n        <li key={Math.random()}>\r\n          <Link to=\"/signin\">Sign In</Link>\r\n        </li>,\r\n        <li key={Math.random()}>\r\n          <Link to=\"/signup\">Sign Up</Link>\r\n        </li>,\r\n      ];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper\">\r\n        <Link to={state ? \"/\" : \"/signin\"} className=\"brand-logo\">\r\n          Instagram\r\n        </Link>\r\n        <ul id=\"nav-mobile\" className=\"right\">\r\n          {renderList()}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"./Profile.css\";\r\nimport { UserConext } from \"../../App\";\r\n\r\nfunction Profile() {\r\n  const [mypics, setPics] = useState([]);\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  const { state, dispatch } = useContext(UserConext);\r\n  useEffect(() => {\r\n    fetch(\"https://insta-clone20.herokuapp.com/mypost\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setPics(result.mypost);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    if (image) {\r\n      const data = new FormData();\r\n      data.append(\"file\", image);\r\n      data.append(\"upload_preset\", \"insta-clone\");\r\n      data.append(\"cloud_name\", \"sunnybd\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/sunnybd/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          // localStorage.setItem(\r\n          // \"user\",\r\n          // JSON.stringify({ ...state, pic: data.url })\r\n          // );\r\n          // dispatch({ type: \"UPDATEPIC\", payload: data.url });\r\n          fetch(\"https://insta-clone20.herokuapp.com/updatepic\", {\r\n            method: \"put\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n            },\r\n            body: JSON.stringify({\r\n              pic: data.url,\r\n            }),\r\n          })\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n              console.log(result);\r\n              localStorage.setItem(\r\n                \"user\",\r\n                JSON.stringify({ ...state, pic: result.pic })\r\n              );\r\n              dispatch({ type: \"UPDATEPIC\", payload: result.pic });\r\n              window.location.reload();\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [image]);\r\n  const updatePhoto = (file) => {\r\n    setImage(file);\r\n  };\r\n  return (\r\n    <div className=\"profile__and__gallary\">\r\n      <div className=\"profile\">\r\n        <div className=\"profile__Picture__Update\">\r\n          <img className=\"profile__img\" src={state ? state.pic : \"loading\"} />\r\n\r\n          <div className=\"file-field input-field\">\r\n            <div className=\"btn waves-light \">\r\n              <span>Update Picture</span>\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => updatePhoto(e.target.files[0])}\r\n              />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n              <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profile__alldetails\">\r\n          <div className=\"profile__name\">\r\n            <h4>{state ? state.name : \"loading\"}</h4>\r\n            <h5>{state ? state.email : \"loading\"}</h5>\r\n          </div>\r\n          <div className=\"profile__details\">\r\n            <h6>{mypics.length} posts</h6>\r\n            <h6>{state ? state.followers.length : \"0\"} follower</h6>\r\n            <h6>{state ? state.following.length : \"0\"} following</h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"gallary\">\r\n        {mypics.map((item) => {\r\n          return (\r\n            <img\r\n              className=\"item\"\r\n              key={item._id}\r\n              src={item.photo}\r\n              alt={item.title}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Profile from \"../Profile/Profile\";\r\nimport M from \"materialize-css\";\r\nimport \"./Signup.css\";\r\n\r\nfunction Signup() {\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [url, setUrl] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      uploadFileds();\r\n    }\r\n  }, [url]);\r\n\r\n  const uploadPic = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"insta-clone\");\r\n    data.append(\"cloud_name\", \"sunnybd\");\r\n    fetch(\"https://api.cloudinary.com/v1_1/sunnybd/image/upload\", {\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setUrl(data.url))\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const uploadFileds = () => {\r\n    const validateEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (!validateEmail.test(email)) {\r\n      M.toast({ html: \"invalid email\", classes: \"#c62828 red darken-3\" });\r\n      return;\r\n    }\r\n    fetch(\"https://insta-clone20.herokuapp.com/signup\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        password,\r\n        email,\r\n        pic: url,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          M.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\r\n        } else {\r\n          localStorage.setItem(\"jwt\", data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n\r\n          M.toast({\r\n            html: data.message,\r\n            classes: \"#43a047 green darken-1\",\r\n          });\r\n          history.push(\"/signin\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const PostData = () => {\r\n    if (image) {\r\n      uploadPic();\r\n    } else {\r\n      uploadFileds();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"mycard\">\r\n      <div className=\"card auth-card input field\">\r\n        <h2>Instagram</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder=\"Name\"\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n        />\r\n        <div className=\"file-field input-field\">\r\n          <div className=\"btn waves-light \">\r\n            <span>Upload Pic</span>\r\n            <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n          </div>\r\n          <div className=\"file-path-wrapper\">\r\n            <input className=\"file-path validate\" type=\"text\" />\r\n          </div>\r\n        </div>\r\n        <button className=\"btn waves-effect waves-light\" onClick={PostData}>\r\n          Sign Up\r\n        </button>\r\n        <h5>\r\n          <Link to=\"/signin\">Already have an account?</Link>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./Signin.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\nimport { UserConext } from \"../../App\";\r\n\r\nfunction Signin() {\r\n  const { state, dispatch } = useContext(UserConext);\r\n  const history = useHistory();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const SignData = () => {\r\n    const validateEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (!validateEmail.test(email)) {\r\n      M.toast({ html: \"invalid email\", classes: \"#c62828 red darken-3\" });\r\n      return;\r\n    }\r\n    fetch(\"https://insta-clone20.herokuapp.com/signin\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        password,\r\n        email,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.error) {\r\n          M.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\r\n        } else {\r\n          localStorage.setItem(\"jwt\", data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n          dispatch({ type: \"USER\", payload: data.user });\r\n          M.toast({\r\n            html: \"signedin sucess\",\r\n            classes: \"#43a047 green darken-1\",\r\n          });\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"mycard\">\r\n      <div className=\"card auth-card input-field\">\r\n        <h2>Instagram</h2>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n        />\r\n        <button\r\n          className=\"btn waves-effect waves-light\"\r\n          onClick={() => SignData()}\r\n        >\r\n          Login\r\n        </button>\r\n        <h5>\r\n          <Link to=\"/signup\">Don't have an account?</Link>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { UserConext } from \"../../App\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./Userprofile.css\";\r\n\r\nfunction Userprofile() {\r\n  const [profile, setProfile] = useState(null);\r\n\r\n  const { state, dispatch } = useContext(UserConext);\r\n\r\n  const { userId } = useParams();\r\n  const [showfollow, setShowfollow] = useState(\r\n    state ? !state.following.includes(userId) : true\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetch(`https://insta-clone20.herokuapp.com/user/${userId}`, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // console.log(result);\r\n        setProfile(result);\r\n      });\r\n  }, []);\r\n  console.log(profile);\r\n\r\n  const FollowUser = () => {\r\n    fetch(\"https://insta-clone20.herokuapp.com/follow\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        followId: userId,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        dispatch({\r\n          type: \"UPDATE\",\r\n          payload: { following: data.following, followers: data.followers },\r\n        });\r\n        localStorage.setItem(\"user\", JSON.stringify(data));\r\n        setProfile((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            user: {\r\n              ...prevState.user,\r\n\r\n              followers: [...prevState.user.followers, data._id],\r\n            },\r\n          };\r\n        });\r\n        setShowfollow(false);\r\n      });\r\n  };\r\n\r\n  const UnfollowUser = () => {\r\n    fetch(\"https://insta-clone20.herokuapp.com/unfollow\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        unfollowId: userId,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        dispatch({\r\n          type: \"UPDATE\",\r\n          payload: { following: data.following, followers: data.followers },\r\n        });\r\n        localStorage.setItem(\"user\", JSON.stringify(data));\r\n        setProfile((prevState) => {\r\n          const newFollower = prevState.user.followers.filter(\r\n            (item) => item != data._id\r\n          );\r\n          return {\r\n            ...prevState,\r\n            user: {\r\n              ...prevState.user,\r\n              followers: newFollower,\r\n            },\r\n          };\r\n        });\r\n        setShowfollow(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {profile ? (\r\n        <div className=\"profile__and__gallary\">\r\n          <div className=\"profile\">\r\n            <div>\r\n              <img className=\"profile__img\" src={profile.user.pic} />\r\n            </div>\r\n            <div className=\"profile__alldetails\">\r\n              <div className=\"profile__name\">\r\n                <h4>{profile.user.name}</h4>\r\n                <h5>{profile.user.email}</h5>\r\n              </div>\r\n              <div className=\"profile__details\">\r\n                <h6>{profile.posts.length} posts</h6>\r\n                <h6>{profile.user.followers.length} followers</h6>\r\n                <h6>{profile.user.following.length} following</h6>\r\n              </div>\r\n              {showfollow ? (\r\n                <button\r\n                  className=\"btn waves-effect waves-light\"\r\n                  onClick={() => FollowUser()}\r\n                >\r\n                  Follow\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"btn waves-effect waves-light\"\r\n                  onClick={() => UnfollowUser()}\r\n                >\r\n                  UnFollow\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"gallary\">\r\n            {profile.posts.map((item) => {\r\n              return (\r\n                <img\r\n                  className=\"item\"\r\n                  key={item._id}\r\n                  src={item.photo}\r\n                  alt={item.title}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h2>loading...!</h2>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Userprofile;\r\n","export const initialState = null;\r\nexport const reducer = (state, action) => {\r\n  if (action.type == \"USER\") {\r\n    return action.payload;\r\n  }\r\n  if (action.type == \"CLEAR\") {\r\n    return null;\r\n  }\r\n  if (action.type == \"UPDATE\") {\r\n    return {\r\n      ...state,\r\n      followers: action.payload.followers,\r\n      following: action.payload.following,\r\n    };\r\n  }\r\n  if (action.type == \"UPDATEPIC\") {\r\n    return {\r\n      ...state,\r\n      pic: action.payload.pic,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserConext } from \"../../App\";\r\n\r\nfunction SubscribesUserPosts() {\r\n  const [data, setData] = useState([]);\r\n  const { state, dispatch } = useContext(UserConext);\r\n  useEffect(() => {\r\n    fetch(\"https://insta-clone20.herokuapp.com/getsubpost\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        setData(result.posts);\r\n      });\r\n  }, []);\r\n\r\n  const likePost = (id) => {\r\n    fetch(\"https://insta-clone20.herokuapp.com/like\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  console.log(data);\r\n  const unlikePost = (id) => {\r\n    fetch(\"https://insta-clone20.herokuapp.com/unlike\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const makeComment = (text, postId) => {\r\n    fetch(\"https://insta-clone20.herokuapp.com/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId,\r\n        text,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deletePost = (postid) => {\r\n    fetch(`https://insta-clone20.herokuapp.com/deletepost/${postid}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.filter((item) => {\r\n          return item._id !== result._id;\r\n        });\r\n        setData(newData);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"home\">\r\n      {data.map((item) => (\r\n        <div className=\"card home__card\" key={item._id}>\r\n          <h5>\r\n            <Link to={\"/profile/\" + item.postedBy._id}>\r\n              {item.postedBy.name}\r\n            </Link>{\" \"}\r\n            {item.postedBy._id == state._id && (\r\n              <i\r\n                className=\"material-icons delete__icon\"\r\n                onClick={() => deletePost(item._id)}\r\n              >\r\n                delete\r\n              </i>\r\n            )}\r\n          </h5>\r\n          <div className=\"card__image\">\r\n            <img className=\"post__image\" src={item.photo} />\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <i className=\"material-icons\">favorite</i>\r\n            {item.likes.includes(state._id) ? (\r\n              <i\r\n                className=\"material-icons\"\r\n                onClick={() => {\r\n                  unlikePost(item._id);\r\n                }}\r\n              >\r\n                thumb_down\r\n              </i>\r\n            ) : (\r\n              <i\r\n                className=\"material-icons\"\r\n                onClick={() => {\r\n                  likePost(item._id);\r\n                }}\r\n              >\r\n                thumb_up\r\n              </i>\r\n            )}\r\n\r\n            <h5>{item.likes.length} likes</h5>\r\n            <h5>{item.title}</h5>\r\n            <p>{item.body}</p>\r\n            {item.comments.map((cmnt) => {\r\n              return (\r\n                <h6 key={cmnt._id}>\r\n                  <span className=\"postedBy\">{cmnt.postedBy.name}</span>\r\n                  {cmnt.text}\r\n                </h6>\r\n              );\r\n            })}\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                makeComment(e.target[0].value, item._id);\r\n                e.target[0].value = \"\";\r\n              }}\r\n            >\r\n              <input type=\"text\" placeholder=\"add a comment\" />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubscribesUserPosts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Createpost.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\n\r\nfunction Createpost() {\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      fetch(\"https://insta-clone20.herokuapp.com/createpost\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        },\r\n        body: JSON.stringify({\r\n          title,\r\n          body,\r\n          pic: url,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          if (data.error) {\r\n            M.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\r\n          } else {\r\n            M.toast({\r\n              html: \"created post\",\r\n              classes: \"#43a047 green darken-1\",\r\n            });\r\n            history.push(\"/\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [url]);\r\n\r\n  const postDetails = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"insta-clone\");\r\n    data.append(\"cloud_name\", \"sunnybd\");\r\n    fetch(\"https://api.cloudinary.com/v1_1/sunnybd/image/upload\", {\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setUrl(data.url))\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"card input-field create__post\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"body\"\r\n        value={body}\r\n        onChange={(e) => setBody(e.target.value)}\r\n      />\r\n      <div className=\"file-field input-field\">\r\n        <div className=\"btn waves-light \">\r\n          <span>Upload Image</span>\r\n          <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n        </div>\r\n        <div className=\"file-path-wrapper\">\r\n          <input className=\"file-path validate\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n      <button\r\n        className=\"btn waves-effect waves-light\"\r\n        onClick={() => postDetails()}\r\n      >\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Createpost;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserConext } from \"../../App\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home() {\r\n  const [data, setData] = useState([]);\r\n  const { state, dispatch } = useContext(UserConext);\r\n  useEffect(() => {\r\n    fetch(\"https://insta-clone20.herokuapp.com/allpost\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        setData(result.posts);\r\n      });\r\n  }, []);\r\n\r\n  const likePost = (id) => {\r\n    fetch(\"https://insta-clone20.herokuapp.com/like\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  console.log(data);\r\n  const unlikePost = (id) => {\r\n    fetch(\"https://insta-clone20.herokuapp.com/unlike\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const makeComment = (text, postId) => {\r\n    fetch(\"https://insta-clone20.herokuapp.com/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId,\r\n        text,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deletePost = (postid) => {\r\n    fetch(`https://insta-clone20.herokuapp.com/deletepost/${postid}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.filter((item) => {\r\n          return item._id !== result._id;\r\n        });\r\n        setData(newData);\r\n      });\r\n  };\r\n  console.log(data);\r\n  return (\r\n    <div className=\"home\">\r\n      {data.map((item) => (\r\n        <div className=\"card home__card\" key={item._id}>\r\n          <h5 className=\"name__deleteIcon\">\r\n            <Link to={\"/profile/\" + item.postedBy._id}>\r\n              <div className=\"postedBy__namewithimage\">\r\n                <img\r\n                  className=\"postedBy__image\"\r\n                  src={item.postedBy.pic}\r\n                  alt=\"\"\r\n                />{\" \"}\r\n                <small className=\"postedBy__name\"> {item.postedBy.name}</small>\r\n              </div>\r\n            </Link>{\" \"}\r\n            {item.postedBy._id == state._id && (\r\n              <i\r\n                className=\"material-icons delete__icon\"\r\n                onClick={() => deletePost(item._id)}\r\n              >\r\n                delete\r\n              </i>\r\n            )}\r\n          </h5>\r\n          <div className=\"card__image\">\r\n            <img className=\"post__image\" src={item.photo} />\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <i className=\"material-icons\">favorite</i>\r\n            {item.likes.includes(state._id) ? (\r\n              <i\r\n                className=\"material-icons\"\r\n                onClick={() => {\r\n                  unlikePost(item._id);\r\n                }}\r\n              >\r\n                thumb_down\r\n              </i>\r\n            ) : (\r\n              <i\r\n                className=\"material-icons\"\r\n                onClick={() => {\r\n                  likePost(item._id);\r\n                }}\r\n              >\r\n                thumb_up\r\n              </i>\r\n            )}\r\n\r\n            <h5>{item.likes.length} likes</h5>\r\n            <h5>{item.title}</h5>\r\n            <p>{item.body}</p>\r\n            {item.comments.map((cmnt) => {\r\n              return (\r\n                <h6 key={cmnt._id}>\r\n                  <span className=\"postedBy\">{cmnt.postedBy.name}</span>\r\n                  {cmnt.text}\r\n                </h6>\r\n              );\r\n            })}\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                makeComment(e.target[0].value, item._id);\r\n                e.target[0].value = \"\";\r\n              }}\r\n            >\r\n              <input type=\"text\" placeholder=\"add a comment\" />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { createContext, useReducer, useEffect, useContext } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport Signup from \"./components/Signup/Signup\";\nimport Signin from \"./components/Sign In/Signin\";\n\nimport Userprofile from \"./components/UserProfile/Userprofile\";\nimport { reducer, initialState } from \"./reducers/userReducer\";\nimport SubscribesUserPosts from \"./components/SubscribesUserPosts/SubscribesUserPosts\";\nimport Createpost from \"./components/CreatePost/Createpost\";\nimport Home from \"./components/Home/Home\";\nexport const UserConext = createContext();\n\nconst Routing = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(UserConext);\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      dispatch({ type: \"USER\", payload: user });\n    } else {\n      history.push(\"/signin\");\n    }\n  }, []);\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/signin\">\n        <Signin />\n      </Route>\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route exact path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route path=\"/create\">\n        <Createpost />\n      </Route>\n      <Route path=\"/profile/:userId\">\n        <Userprofile />\n      </Route>\n      <Route path=\"/myfollowingspost\">\n        <SubscribesUserPosts />\n      </Route>\n    </Switch>\n  );\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <UserConext.Provider value={{ state, dispatch }}>\n      <div className=\"App\">\n        <Router>\n          <Navbar />\n          <Routing />\n        </Router>\n      </div>\n    </UserConext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}